[{"C:\\SQL-View\\app\\src\\index.tsx":"1","C:\\SQL-View\\app\\src\\reportWebVitals.ts":"2","C:\\SQL-View\\app\\src\\App.tsx":"3","C:\\SQL-View\\app\\src\\components\\tableSelect.tsx":"4","C:\\SQL-View\\app\\src\\components\\charOptions.tsx":"5","C:\\SQL-View\\app\\src\\components\\query.tsx":"6","C:\\SQL-View\\app\\src\\components\\modalUpload.tsx":"7","C:\\SQL-View\\app\\src\\components\\charts\\bar.tsx":"8","C:\\SQL-View\\app\\src\\components\\charts\\pie.tsx":"9","C:\\SQL-View\\app\\src\\components\\breakdown.tsx":"10","C:\\SQL-View\\app\\src\\components\\charts\\line.tsx":"11","C:\\SQL-View\\app\\src\\components\\breakdown\\generate.tsx":"12","C:\\SQL-View\\app\\src\\components\\breakdown\\breakdownBy.tsx":"13","C:\\SQL-View\\app\\src\\helper\\chartGenerate.tsx":"14"},{"size":494,"mtime":1608570277058,"results":"15","hashOfConfig":"16"},{"size":440,"mtime":1608570277061,"results":"17","hashOfConfig":"16"},{"size":4091,"mtime":1608760200191,"results":"18","hashOfConfig":"16"},{"size":821,"mtime":1608570277056,"results":"19","hashOfConfig":"16"},{"size":741,"mtime":1608570277046,"results":"20","hashOfConfig":"16"},{"size":373,"mtime":1608570277055,"results":"21","hashOfConfig":"16"},{"size":564,"mtime":1608570277053,"results":"22","hashOfConfig":"16"},{"size":266,"mtime":1608760370343,"results":"23","hashOfConfig":"16"},{"size":266,"mtime":1608663316284,"results":"24","hashOfConfig":"16"},{"size":668,"mtime":1608758743195,"results":"25","hashOfConfig":"16"},{"size":270,"mtime":1608663311404,"results":"26","hashOfConfig":"16"},{"size":180,"mtime":1608570277042,"results":"27","hashOfConfig":"16"},{"size":875,"mtime":1608758566813,"results":"28","hashOfConfig":"16"},{"size":2143,"mtime":1608760349145,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"u6gapl",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\SQL-View\\app\\src\\index.tsx",[],["61","62"],"C:\\SQL-View\\app\\src\\reportWebVitals.ts",[],"C:\\SQL-View\\app\\src\\App.tsx",["63"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport './App.css';\r\nimport LineChart from './components/charts/line';\r\nimport BarChart from './components/charts/bar';\r\nimport PieChart from './components/charts/pie';\r\nimport Options from './components/charOptions';\r\nimport Query from './components/query';\r\nimport TableSelect from './components/tableSelect';\r\nimport BreakDown from './components/breakdown';\r\nimport axios from 'axios';\r\nimport ModalUpload from './components/modalUpload';\r\nimport generateChart from './helper/chartGenerate';\r\n\r\nfunction App() {\r\n  const [tableList, setTableList] = useState([]) as any;\r\n  const tableRef = useRef([]) as any;\r\n  const [queryRes, setQueryRes] = useState([]) as any;\r\n  const [chartData, setchartData] = useState<object>({});\r\n  const [currChart, setCurrChart] = useState<undefined>(undefined);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [currTable, setCurrTable] = useState<string>('');\r\n  const [xAxis, setXAxis] = useState<string>('');\r\n  const [yAxis, setYAxis] = useState<string>('');\r\n  const [breakdown, setBreakDown] = useState<string>('');\r\n\r\n  if(currTable === '' && tableRef.current.length === 1) {\r\n    setCurrTable(tableRef.current[0]);\r\n  }\r\n\r\n  // I cannot access the HTML in the modal I am using in React so I have to access via the DOM\r\n  useEffect(():void => {\r\n    let curr = document.getElementById('upload') as HTMLInputElement;\r\n    let save = document.getElementById('save') as HTMLButtonElement;\r\n    save.addEventListener('click', () => {\r\n      postFile(curr!.files![0]);\r\n      curr.value = '';\r\n    });\r\n  }, []);\r\n\r\n  const generateChartData = ():void => {\r\n    setchartData((generateChart(xAxis, yAxis, breakdown, queryRes)));\r\n  }\r\n\r\n  const postFile = (file):void => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    axios.post('http://localhost:300/table', formData).then((postedTable) => {\r\n      tableRef.current.push(postedTable.data.tableName);\r\n      setTableList([...tableList, postedTable.data.tableName]);\r\n    });\r\n  }\r\n\r\n  const postQuery = ():void => {\r\n    const queryTable = query.split(' ').join('%20');\r\n    axios.get(`http://localhost:300/tableData?table=${currTable}&query=${queryTable}`)\r\n    .then((response) => {\r\n      if(response.data.status === 'success') {\r\n        setQueryRes(response.data.details);\r\n      } else if(response.data.status === 'error') {\r\n        alert(response.data.details.sqlMessage);\r\n      }\r\n    });\r\n  }\r\n\r\n  const charts: object = {\r\n    'Line': <LineChart testData={chartData}/>,\r\n    'Bar': <BarChart testData={chartData}/>,\r\n    'Pie': <PieChart testData={chartData}/>\r\n  }\r\n\r\n  return (\r\n    <Container className=\"App\">\r\n      <Row className=\"header\">\r\n        <Col>\r\n            <h1>SQL View</h1>\r\n            <a href=\"#file-modal\" rel=\"modal:open\"><i className='far fa-file icon'></i></a>\r\n            <ModalUpload/>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center row\">\r\n              <Options changeChart={(x) => setCurrChart(x)} current={currChart}/>\r\n              <TableSelect tableOptions={tableRef.current} selectTable={(selectedTable) => setCurrTable(selectedTable)} currentTable={currTable}/>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center row\" id=\"sql-container\">\r\n              <Query changeQuery={(x) => setQuery(x)} runQuery={() => postQuery()}/>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col xs={12}>\r\n                <BreakDown breakdownVals={queryRes} xAxis={(x) => setXAxis(x)} yAxis={(y) => setYAxis(y)} breakD={(b) => setBreakDown(b)} createTable={() => generateChartData()}/>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Col>\r\n        <Col className=\"chart-container\">\r\n            {charts[currChart!]}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\SQL-View\\app\\src\\components\\tableSelect.tsx",[],"C:\\SQL-View\\app\\src\\components\\charOptions.tsx",[],"C:\\SQL-View\\app\\src\\components\\query.tsx",[],"C:\\SQL-View\\app\\src\\components\\modalUpload.tsx",[],"C:\\SQL-View\\app\\src\\components\\charts\\bar.tsx",[],"C:\\SQL-View\\app\\src\\components\\charts\\pie.tsx",[],"C:\\SQL-View\\app\\src\\components\\breakdown.tsx",[],"C:\\SQL-View\\app\\src\\components\\charts\\line.tsx",[],"C:\\SQL-View\\app\\src\\components\\breakdown\\generate.tsx",[],"C:\\SQL-View\\app\\src\\components\\breakdown\\breakdownBy.tsx",[],["64","65"],"C:\\SQL-View\\app\\src\\helper\\chartGenerate.tsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":39,"column":6,"nodeType":"72","endLine":39,"endColumn":8,"suggestions":"73"},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postFile'. Either include it or remove the dependency array.","ArrayExpression",["78"],["76"],["77"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [postFile]",{"range":"81","text":"82"},[1668,1670],"[postFile]"]